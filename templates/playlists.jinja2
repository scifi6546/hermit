<!DOCTYPE html>
<head>
	<link href="/static/index.css" rel="stylesheet"></link>
	<meta name="viewport" content="width=device-width, initial-scale=1" /> 
	<script src="static/jquery.js" type="text/javascript"></script>
</head>
<div class="topnav">
	<a href="TEST" class="topnav_link">Log Out</a>
	<a href="/settings" class="topnav_link">Settings</a>
	<a href="/" class="topnav_link">Home</a>
	<a href="/playlists" class="topnav_active">Playlists</a>
</div>
<div class="body">
</div>
<script>

	class Playlist{
		//input: {"name":"foo","videos":[VIDEO_OBJ]}
		constructor(playlist){
			//SETTING GLOBALS

			this.playlist = playlist;
			this.playlistDiv="<div class=playlist id='{PLAYLIST_NAME}'><img src='{THUMB_URL}'class=thumbnail/>{PLAYLIST_NAME}</div>";

			console.log("This");
			console.log(this);
			let first_vid = playlist.videos[0];
			//replacing playlist name
			let temp_str = this.playlistDiv.replace(/{PLAYLIST_NAME}/gi,playlist.name);
			//replacing thumburl
			temp_str = temp_str.replace(/{THUMB_URL}/gi,first_vid.thumbnail_url);
	
			$(".body").append(temp_str);
			this.playlist_div_html=document.getElementById(playlist.name);
			//Again I am sorry. I am setting videos on playlist_div_html inorder to
			//acces video data
			// Setting playlist to this which is playlist passed in through context
			this.playlist_div_html.playlist = this.playlist;
			this.playlist_div_html.onclick=function(input){
				destroy_playlist_previews(this.playlist);
			}
		}
		destroy(){
			$(this.playlist_div_html).remove();	
		}
	}
class PlaylistPlay{
	constructor(playlist){
	this.play_type="linear";
	this.playlist_play = 
	"<div class=playlist_div id={PLAYLIST_NAME}>"+
		"<div class=video_div>"+
			"<video controls class=playlist_video>"+
				"<source class=playlist_video_src src='{VIDEO_URL}'/>"+
			"</video>"+
		"</div>"+
		"<div class=video_preview_div>"+

			"<div class=preview_header>"+
				"<img class=shuffle src=/static/icons/shuffle.svg></img>"+

				"<img class=repeat src=/static/icons/repeat.svg></img>"+
			"</div>"+
		"</div>"+
	"</div>"
		this.playlist_preview_div="<div class=\"preview_div\">"+
			"<div class = preview_description>"+
				"{VIDEO_NAME}"+
			"</div>"+
			"<img class=video_thumb id='{VIDEO_PATH}' src='{THUMB_URL}'/>"+
		"</div";
		this.playlist=playlist;
		this.volume=1.0;


		let temp = this.playlist_play.replace(/{PLAYLIST_NAME}/gi,playlist.name);
		temp = temp.replace(/{VIDEO_URL}/gi,playlist.videos[0].url);
		
		$(".body_no_grid").append(temp);
		let video = $(".playlist_video");
		video[0].playlist_obj = this;
		video[0].onended=function(input){
			console.log(this);	
			this.playlist_obj.play_next_video();
		};
		video[0].onvolumechange=function(input){
			this.playlist_obj.set_volume()
		}
		let shuffle = $(".shuffle")[0]
		shuffle.playlist=this;
		shuffle.onclick=function(){
			
			this.playlist.shuffle();
		}
		this.preview_divs=[]//array of preview divs
		for(i in this.playlist.videos){
			let temp_preview = this.playlist_preview_div.replace(/{VIDEO_PATH}/gi,this.playlist.videos[i].video_path);
			temp_preview = temp_preview.replace(/{THUMB_URL}/gi,this.playlist.videos[i].thumbnail_url);
			temp_preview = temp_preview.replace(/{VIDEO_NAME}/gi,this.playlist.videos[i].name);
			let temp = $(temp_preview).appendTo(".video_preview_div")
			temp[0].index=i
			temp[0].playlist=this;
			this.preview_divs.push(temp[0]);
			temp[0].onclick=function(){
				this.playlist.play(this.index);
			}
			console.log("temp: ");
			console.log(temp);
		}
		this.current_video=0;
		console.log("preview_divs: ")
		console.log(this.preview_divs);
		$(this.preview_divs[this.current_video]).attr("class","preview_div_selected");
		
	}
	play(index){
		if(index<this.playlist.videos.length){
			$(this.preview_divs[this.current_video]).attr("class","preview_div");
			this.current_video=index;
			$(this.preview_divs[this.current_video]).attr("class","preview_div_selected");
			$(".playlist_video_src")[0].src=this.playlist.videos[
				this.current_video].url;
			$(".playlist_video")[0].load();
			$(".playlist_video")[0].play();
			$(".playlist_video")[0].volume=this.volume;
		}
	}
	set_volume(){
		this.volume=$(".playlist_video")[0].volume;
		console.log(this.volume);
	}
	shuffle(){
		if(this.play_type!="shuffle"){
			$(".shuffle")[0].src="/static/icons/shuffle-selected.svg";
			this.play_type="shuffle";
		}else{

			$(".shuffle")[0].src="/static/icons/shuffle.svg";
			this.play_type="linear";
		}
	}
	play_next_video(){
		$(this.preview_divs[this.current_video]).attr("class","preview_div");
		console.log("play_type")
		console.log(this.play_type);
		if(this.play_type=="linear"){
			console.log("length: ");
			console.log(this.playlist.videos.length);
			if(this.current_video+1<this.playlist.videos.length){
				console.log("added video")
				this.current_video+=1;
				console.log(this.current_video);
			}else{
				this.current_video=0;
			}
		}
		if(this.play_type=="shuffle"){
			this.current_video=random_num(this.playlist.videos.length-1,this.current_video);
		}
		let vid_thumb = this.preview_divs[this.current_video];
		console.log(vid_thumb);
		console.log("preview divs: ");
		console.log("preview divs: ");
		console.log(this.preview_divs);
		debug_temp = this.preview_divs;
		console.log("Current video: ");
		console.log(this.current_video);
		$(this.preview_divs[this.current_video]).attr("class","preview_div_selected");
		$(".playlist_video_src")[0].src=this.playlist.videos[
			this.current_video].url;
		$(".playlist_video")[0].load();
		$(".playlist_video")[0].play();
		$(".playlist_video")[0].volume=this.volume;
	}
}
function random_num(max,last){
	let rand_num_int = Math.floor(Math.random()*(max+1));
	console.log("rand int")
	console.log(rand_num_int);
	if(rand_num_int==last){
		return random_num(max,last);
	}else{
		return rand_num_int;
	}
}
var debug_temp="";
var playlist_play = 
	"<div class=playlist_div id={PLAYLIST_NAME}>"+
		"<div class=video_div>"+
			"<video controls class=playlist_video>"+
				"<source class=playlist_video_src src='{VIDEO_URL}'/>"+
			"</video>"+
		"</div>"+
		"<div class=video_preview_div>"+
			"<div class=preview_header>"+
				"<img class=shuffle src=/static/icons/shuffle.svg></img>"+

				"<img class=shuffle src=/static/icons/repeat.svg></img>"+
			"</div>"
			
		"</div>"+
	"</div>"
var playlist_div=
	"<div class=playlist id='{PLAYLIST_NAME}'><img src='{THUMB_URL}'class=thumbnail/>{PLAYLIST_NAME}</div>";
let playlist_objs=[]
$.ajax({url:"/api/get_playlist_all",type:"GET",complete:function(input){
	console.log(input);
	let plays = JSON.parse(input.responseText);
	console.log(plays);
	for(i in plays){
		playlist_objs.push(new Playlist(plays[i]));
	}
}});
playlist_play=""
function destroy_playlist_previews(playlist){
	for(var i=playlist_objs.length-1; i>=0;i--){	
		playlist_objs[i].destroy();
		playlist_objs.pop(i);
	}
			$(".body")[0].className="body_no_grid";
	playlist_play=new PlaylistPlay(playlist);
}
//index in playlist_videos of current video
var CURRENT_VIDEO_INDEX=0;
var LAST_VOLUME=1;
//gets playlists:

</script>
